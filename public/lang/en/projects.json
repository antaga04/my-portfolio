{
  "info": {
    "info_4": "In this project, I developed a weather forecasting web app using React. The app leverages the Open Weather API and RapidAPI to provide users with real-time weather forecasts based on their location. It features a clean and user-friendly interface, ensuring a seamless user experience. Users can perform a location-based search to access weather data for their current area or explore forecasts for other locations. Additionally, users can search for a city or select one from a customizable list, where they can add new cities, delete them, or reorder them. Geolocation can also be enabled to automatically display weather information for the user's current location.",
    "info_3": "In this project, I created a web app using Vite and React. It taps into NASA's official APIs, offering users access to the Astronomical Picture of the Day (APOD) and Mars Rover Photos (MRP).<br>The web has a simple date picker for choosing the desired photo day and shuffle button to generate a random one. You can swith between pages usign the nav bar developed with react-router-dom. I specially love this project for being my first contact with React.",
    "info_5": "In this project, I'll be diving into the world of game development with React by creating an engaging Game Hub. Within this hub, users will have the opportunity to enjoy three classic and entertaining games: Tic-Tac-Toe, Hangman, and Sudoku. And maybe more.",
    "info_6": "I developed a RESTful API using Node.js, Express and MongoDB to manage developer portfolios. The API allows full CRUD operations and has authentication and authorization to protect certain routes. In addition, portfolio images are stored in Cloudinary. This project was my introduction to building servers with the MERN stack.",
    "info_7": "I developed a RESTful API using Node.js, Express, and MongoDB to manage games and scores. The API allows CRUD operations for games and scores, and is protected by authentication and authorization. The images are stored in Cloudinary. This project allowed me to work with related data models and strengthen my skills in creating robust APIs.",
    "info_8": "I developed a RESTful API using Node.js, Express and MongoDB to manage books and reviews. The API allows to perform CRUD operations for books and reviews, with authentication and authorization to protect certain paths. The images are stored in Cloudinary. This project allowed me to work with related data models and strengthen my skills in developing robust APIs.",
    "info_1": "This is my secod project of all time. Here, I created an imaginary Rock CD website. It's a platform where music lovers can explore CDs from various rock genres, styles, bands, etc. With user-friendly filters and a search function for finding specific albums.",
    "info_0": "I'm proud to introduce my first web project, a responsive landing page! Developed with HTML and CSS, this simple yet effective web page showcases my early skills in web development. I have come a long way since then. I like to showcase this project to show how much I have improve.",
    "info_9": "In this project, I developed a game-centric web application called Puzlynk. This platform offers engaging puzzles, including «Who’s That Pokémon» and the classic 15 Puzzle. Users can register and log in to track their scores, which are displayed in a dynamic leaderboard for competitive ranking. The app features a sleek and responsive design for an enjoyable user experience. The tech stack for this project includes React and TypeScript for building the frontend, styled with TailwindCSS for fast and modern UI development. On the backend, I used Node.js to handle API logic and MongoDB for efficient data storage, ensuring scalability. Additionally, Cloudinary was integrated to store and manage image assets securely. These technologies, combined with others, allow for robust performance and seamless functionality throughout the platform.",
    "info_10": "In this project, I developed a web application for managing shared expenses. Users can create groups, record expenses, and assign custom amounts, with a detailed balance showing who owes whom. The platform allows users to invite others and collaborate in managing expenses, making debt settlement easy. For development, I used React and TypeScript for the frontend, styled with TailwindCSS for a modern and responsive design. On the backend, I implemented Node.js along with an efficient database to manage group data and transactions. This combination of technologies ensures a seamless experience and an intuitive, efficient expense management system."
  },
  "title": "Projects List",
  "all_projects_tag": "All Projects",
  "instruction": "Click a tag to read more.",
  "demo": "demo",
  "code": "code",
  "status": {
    "deployed": "deployed",
    "future": "future project"
  },
  "project_not_found": "Project not found",
  "desktop_img_alt": "Desktop preview image of",
  "mobile_img_alt": "Mobile preview image of"
}